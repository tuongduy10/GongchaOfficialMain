#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace GongchaOfficial.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="GongchaOfficial")]
	public partial class dbGongchaDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertAdmin(Admin instance);
    partial void UpdateAdmin(Admin instance);
    partial void DeleteAdmin(Admin instance);
    partial void InsertBill(Bill instance);
    partial void UpdateBill(Bill instance);
    partial void DeleteBill(Bill instance);
    partial void InsertCategory(Category instance);
    partial void UpdateCategory(Category instance);
    partial void DeleteCategory(Category instance);
    partial void InsertCollection(Collection instance);
    partial void UpdateCollection(Collection instance);
    partial void DeleteCollection(Collection instance);
    partial void InsertCustomer(Customer instance);
    partial void UpdateCustomer(Customer instance);
    partial void DeleteCustomer(Customer instance);
    partial void InsertCustomerAddress(CustomerAddress instance);
    partial void UpdateCustomerAddress(CustomerAddress instance);
    partial void DeleteCustomerAddress(CustomerAddress instance);
    partial void InsertDiscount(Discount instance);
    partial void UpdateDiscount(Discount instance);
    partial void DeleteDiscount(Discount instance);
    partial void InsertProduct(Product instance);
    partial void UpdateProduct(Product instance);
    partial void DeleteProduct(Product instance);
    partial void InsertSex(Sex instance);
    partial void UpdateSex(Sex instance);
    partial void DeleteSex(Sex instance);
    partial void InsertSize(Size instance);
    partial void UpdateSize(Size instance);
    partial void DeleteSize(Size instance);
    partial void InsertBillDeTail(BillDeTail instance);
    partial void UpdateBillDeTail(BillDeTail instance);
    partial void DeleteBillDeTail(BillDeTail instance);
    #endregion
		
		public dbGongchaDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["GongchaOfficialConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public dbGongchaDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dbGongchaDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dbGongchaDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dbGongchaDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Admin> Admins
		{
			get
			{
				return this.GetTable<Admin>();
			}
		}
		
		public System.Data.Linq.Table<Bill> Bills
		{
			get
			{
				return this.GetTable<Bill>();
			}
		}
		
		public System.Data.Linq.Table<Category> Categories
		{
			get
			{
				return this.GetTable<Category>();
			}
		}
		
		public System.Data.Linq.Table<Collection> Collections
		{
			get
			{
				return this.GetTable<Collection>();
			}
		}
		
		public System.Data.Linq.Table<Customer> Customers
		{
			get
			{
				return this.GetTable<Customer>();
			}
		}
		
		public System.Data.Linq.Table<CustomerAddress> CustomerAddresses
		{
			get
			{
				return this.GetTable<CustomerAddress>();
			}
		}
		
		public System.Data.Linq.Table<Discount> Discounts
		{
			get
			{
				return this.GetTable<Discount>();
			}
		}
		
		public System.Data.Linq.Table<Product> Products
		{
			get
			{
				return this.GetTable<Product>();
			}
		}
		
		public System.Data.Linq.Table<Sex> Sexes
		{
			get
			{
				return this.GetTable<Sex>();
			}
		}
		
		public System.Data.Linq.Table<Size> Sizes
		{
			get
			{
				return this.GetTable<Size>();
			}
		}
		
		public System.Data.Linq.Table<BillDeTail> BillDeTails
		{
			get
			{
				return this.GetTable<BillDeTail>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Admin")]
	public partial class Admin : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _AdminId;
		
		private string _AdminAccount;
		
		private string _AdminPassword;
		
		private string _AdminFunction;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAdminIdChanging(string value);
    partial void OnAdminIdChanged();
    partial void OnAdminAccountChanging(string value);
    partial void OnAdminAccountChanged();
    partial void OnAdminPasswordChanging(string value);
    partial void OnAdminPasswordChanged();
    partial void OnAdminFunctionChanging(string value);
    partial void OnAdminFunctionChanged();
    #endregion
		
		public Admin()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdminId", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string AdminId
		{
			get
			{
				return this._AdminId;
			}
			set
			{
				if ((this._AdminId != value))
				{
					this.OnAdminIdChanging(value);
					this.SendPropertyChanging();
					this._AdminId = value;
					this.SendPropertyChanged("AdminId");
					this.OnAdminIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdminAccount", DbType="VarChar(20)")]
		public string AdminAccount
		{
			get
			{
				return this._AdminAccount;
			}
			set
			{
				if ((this._AdminAccount != value))
				{
					this.OnAdminAccountChanging(value);
					this.SendPropertyChanging();
					this._AdminAccount = value;
					this.SendPropertyChanged("AdminAccount");
					this.OnAdminAccountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdminPassword", DbType="VarChar(20)")]
		public string AdminPassword
		{
			get
			{
				return this._AdminPassword;
			}
			set
			{
				if ((this._AdminPassword != value))
				{
					this.OnAdminPasswordChanging(value);
					this.SendPropertyChanging();
					this._AdminPassword = value;
					this.SendPropertyChanged("AdminPassword");
					this.OnAdminPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdminFunction", DbType="VarChar(20)")]
		public string AdminFunction
		{
			get
			{
				return this._AdminFunction;
			}
			set
			{
				if ((this._AdminFunction != value))
				{
					this.OnAdminFunctionChanging(value);
					this.SendPropertyChanging();
					this._AdminFunction = value;
					this.SendPropertyChanged("AdminFunction");
					this.OnAdminFunctionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Bill")]
	public partial class Bill : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _BillId;
		
		private System.Nullable<System.DateTime> _BillTimeSet;
		
		private System.Nullable<double> _BillPrice;
		
		private string _BillPaymentMethods;
		
		private string _BillNote;
		
		private string _DiscountId;
		
		private string _CustomerPhoneNumber;
		
		private EntitySet<BillDeTail> _BillDeTails;
		
		private EntityRef<Customer> _Customer;
		
		private EntityRef<CustomerAddress> _CustomerAddress;
		
		private EntityRef<Discount> _Discount;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBillIdChanging(int value);
    partial void OnBillIdChanged();
    partial void OnBillTimeSetChanging(System.Nullable<System.DateTime> value);
    partial void OnBillTimeSetChanged();
    partial void OnBillPriceChanging(System.Nullable<double> value);
    partial void OnBillPriceChanged();
    partial void OnBillPaymentMethodsChanging(string value);
    partial void OnBillPaymentMethodsChanged();
    partial void OnBillNoteChanging(string value);
    partial void OnBillNoteChanged();
    partial void OnDiscountIdChanging(string value);
    partial void OnDiscountIdChanged();
    partial void OnCustomerPhoneNumberChanging(string value);
    partial void OnCustomerPhoneNumberChanged();
    #endregion
		
		public Bill()
		{
			this._BillDeTails = new EntitySet<BillDeTail>(new Action<BillDeTail>(this.attach_BillDeTails), new Action<BillDeTail>(this.detach_BillDeTails));
			this._Customer = default(EntityRef<Customer>);
			this._CustomerAddress = default(EntityRef<CustomerAddress>);
			this._Discount = default(EntityRef<Discount>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BillId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int BillId
		{
			get
			{
				return this._BillId;
			}
			set
			{
				if ((this._BillId != value))
				{
					this.OnBillIdChanging(value);
					this.SendPropertyChanging();
					this._BillId = value;
					this.SendPropertyChanged("BillId");
					this.OnBillIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BillTimeSet", DbType="DateTime")]
		public System.Nullable<System.DateTime> BillTimeSet
		{
			get
			{
				return this._BillTimeSet;
			}
			set
			{
				if ((this._BillTimeSet != value))
				{
					this.OnBillTimeSetChanging(value);
					this.SendPropertyChanging();
					this._BillTimeSet = value;
					this.SendPropertyChanged("BillTimeSet");
					this.OnBillTimeSetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BillPrice", DbType="Float")]
		public System.Nullable<double> BillPrice
		{
			get
			{
				return this._BillPrice;
			}
			set
			{
				if ((this._BillPrice != value))
				{
					this.OnBillPriceChanging(value);
					this.SendPropertyChanging();
					this._BillPrice = value;
					this.SendPropertyChanged("BillPrice");
					this.OnBillPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BillPaymentMethods", DbType="VarChar(30)")]
		public string BillPaymentMethods
		{
			get
			{
				return this._BillPaymentMethods;
			}
			set
			{
				if ((this._BillPaymentMethods != value))
				{
					this.OnBillPaymentMethodsChanging(value);
					this.SendPropertyChanging();
					this._BillPaymentMethods = value;
					this.SendPropertyChanged("BillPaymentMethods");
					this.OnBillPaymentMethodsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BillNote", DbType="NVarChar(50)")]
		public string BillNote
		{
			get
			{
				return this._BillNote;
			}
			set
			{
				if ((this._BillNote != value))
				{
					this.OnBillNoteChanging(value);
					this.SendPropertyChanging();
					this._BillNote = value;
					this.SendPropertyChanged("BillNote");
					this.OnBillNoteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiscountId", DbType="VarChar(20)")]
		public string DiscountId
		{
			get
			{
				return this._DiscountId;
			}
			set
			{
				if ((this._DiscountId != value))
				{
					if (this._Discount.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDiscountIdChanging(value);
					this.SendPropertyChanging();
					this._DiscountId = value;
					this.SendPropertyChanged("DiscountId");
					this.OnDiscountIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerPhoneNumber", DbType="VarChar(30)")]
		public string CustomerPhoneNumber
		{
			get
			{
				return this._CustomerPhoneNumber;
			}
			set
			{
				if ((this._CustomerPhoneNumber != value))
				{
					if ((this._Customer.HasLoadedOrAssignedValue || this._CustomerAddress.HasLoadedOrAssignedValue))
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCustomerPhoneNumberChanging(value);
					this.SendPropertyChanging();
					this._CustomerPhoneNumber = value;
					this.SendPropertyChanged("CustomerPhoneNumber");
					this.OnCustomerPhoneNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Bill_BillDeTail", Storage="_BillDeTails", ThisKey="BillId", OtherKey="BillId")]
		public EntitySet<BillDeTail> BillDeTails
		{
			get
			{
				return this._BillDeTails;
			}
			set
			{
				this._BillDeTails.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_Bill", Storage="_Customer", ThisKey="CustomerPhoneNumber", OtherKey="CustomerPhoneNumer", IsForeignKey=true)]
		public Customer Customer
		{
			get
			{
				return this._Customer.Entity;
			}
			set
			{
				Customer previousValue = this._Customer.Entity;
				if (((previousValue != value) 
							|| (this._Customer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Customer.Entity = null;
						previousValue.Bills.Remove(this);
					}
					this._Customer.Entity = value;
					if ((value != null))
					{
						value.Bills.Add(this);
						this._CustomerPhoneNumber = value.CustomerPhoneNumer;
					}
					else
					{
						this._CustomerPhoneNumber = default(string);
					}
					this.SendPropertyChanged("Customer");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CustomerAddress_Bill", Storage="_CustomerAddress", ThisKey="CustomerPhoneNumber", OtherKey="CustomerPhoneNumer", IsForeignKey=true)]
		public CustomerAddress CustomerAddress
		{
			get
			{
				return this._CustomerAddress.Entity;
			}
			set
			{
				CustomerAddress previousValue = this._CustomerAddress.Entity;
				if (((previousValue != value) 
							|| (this._CustomerAddress.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CustomerAddress.Entity = null;
						previousValue.Bills.Remove(this);
					}
					this._CustomerAddress.Entity = value;
					if ((value != null))
					{
						value.Bills.Add(this);
						this._CustomerPhoneNumber = value.CustomerPhoneNumer;
					}
					else
					{
						this._CustomerPhoneNumber = default(string);
					}
					this.SendPropertyChanged("CustomerAddress");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Discount_Bill", Storage="_Discount", ThisKey="DiscountId", OtherKey="DiscountId", IsForeignKey=true)]
		public Discount Discount
		{
			get
			{
				return this._Discount.Entity;
			}
			set
			{
				Discount previousValue = this._Discount.Entity;
				if (((previousValue != value) 
							|| (this._Discount.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Discount.Entity = null;
						previousValue.Bills.Remove(this);
					}
					this._Discount.Entity = value;
					if ((value != null))
					{
						value.Bills.Add(this);
						this._DiscountId = value.DiscountId;
					}
					else
					{
						this._DiscountId = default(string);
					}
					this.SendPropertyChanged("Discount");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BillDeTails(BillDeTail entity)
		{
			this.SendPropertyChanging();
			entity.Bill = this;
		}
		
		private void detach_BillDeTails(BillDeTail entity)
		{
			this.SendPropertyChanging();
			entity.Bill = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Category")]
	public partial class Category : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _CategoryId;
		
		private string _CategoryName;
		
		private string _CategoryStatus;
		
		private string _SexId;
		
		private string _CollectionId;
		
		private EntitySet<Product> _Products;
		
		private EntitySet<Size> _Sizes;
		
		private EntityRef<Collection> _Collection;
		
		private EntityRef<Sex> _Sex;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCategoryIdChanging(string value);
    partial void OnCategoryIdChanged();
    partial void OnCategoryNameChanging(string value);
    partial void OnCategoryNameChanged();
    partial void OnCategoryStatusChanging(string value);
    partial void OnCategoryStatusChanged();
    partial void OnSexIdChanging(string value);
    partial void OnSexIdChanged();
    partial void OnCollectionIdChanging(string value);
    partial void OnCollectionIdChanged();
    #endregion
		
		public Category()
		{
			this._Products = new EntitySet<Product>(new Action<Product>(this.attach_Products), new Action<Product>(this.detach_Products));
			this._Sizes = new EntitySet<Size>(new Action<Size>(this.attach_Sizes), new Action<Size>(this.detach_Sizes));
			this._Collection = default(EntityRef<Collection>);
			this._Sex = default(EntityRef<Sex>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryId", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string CategoryId
		{
			get
			{
				return this._CategoryId;
			}
			set
			{
				if ((this._CategoryId != value))
				{
					this.OnCategoryIdChanging(value);
					this.SendPropertyChanging();
					this._CategoryId = value;
					this.SendPropertyChanged("CategoryId");
					this.OnCategoryIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string CategoryName
		{
			get
			{
				return this._CategoryName;
			}
			set
			{
				if ((this._CategoryName != value))
				{
					this.OnCategoryNameChanging(value);
					this.SendPropertyChanging();
					this._CategoryName = value;
					this.SendPropertyChanged("CategoryName");
					this.OnCategoryNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryStatus", DbType="VarChar(50)")]
		public string CategoryStatus
		{
			get
			{
				return this._CategoryStatus;
			}
			set
			{
				if ((this._CategoryStatus != value))
				{
					this.OnCategoryStatusChanging(value);
					this.SendPropertyChanging();
					this._CategoryStatus = value;
					this.SendPropertyChanged("CategoryStatus");
					this.OnCategoryStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SexId", DbType="VarChar(10)")]
		public string SexId
		{
			get
			{
				return this._SexId;
			}
			set
			{
				if ((this._SexId != value))
				{
					if (this._Sex.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSexIdChanging(value);
					this.SendPropertyChanging();
					this._SexId = value;
					this.SendPropertyChanged("SexId");
					this.OnSexIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CollectionId", DbType="VarChar(10)")]
		public string CollectionId
		{
			get
			{
				return this._CollectionId;
			}
			set
			{
				if ((this._CollectionId != value))
				{
					if (this._Collection.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCollectionIdChanging(value);
					this.SendPropertyChanging();
					this._CollectionId = value;
					this.SendPropertyChanged("CollectionId");
					this.OnCollectionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Category_Product", Storage="_Products", ThisKey="CategoryId", OtherKey="CategoryId")]
		public EntitySet<Product> Products
		{
			get
			{
				return this._Products;
			}
			set
			{
				this._Products.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Category_Size", Storage="_Sizes", ThisKey="CategoryId", OtherKey="SizeId")]
		public EntitySet<Size> Sizes
		{
			get
			{
				return this._Sizes;
			}
			set
			{
				this._Sizes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Collection_Category", Storage="_Collection", ThisKey="CollectionId", OtherKey="CollectionId", IsForeignKey=true)]
		public Collection Collection
		{
			get
			{
				return this._Collection.Entity;
			}
			set
			{
				Collection previousValue = this._Collection.Entity;
				if (((previousValue != value) 
							|| (this._Collection.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Collection.Entity = null;
						previousValue.Categories.Remove(this);
					}
					this._Collection.Entity = value;
					if ((value != null))
					{
						value.Categories.Add(this);
						this._CollectionId = value.CollectionId;
					}
					else
					{
						this._CollectionId = default(string);
					}
					this.SendPropertyChanged("Collection");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Sex_Category", Storage="_Sex", ThisKey="SexId", OtherKey="SexId", IsForeignKey=true)]
		public Sex Sex
		{
			get
			{
				return this._Sex.Entity;
			}
			set
			{
				Sex previousValue = this._Sex.Entity;
				if (((previousValue != value) 
							|| (this._Sex.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Sex.Entity = null;
						previousValue.Categories.Remove(this);
					}
					this._Sex.Entity = value;
					if ((value != null))
					{
						value.Categories.Add(this);
						this._SexId = value.SexId;
					}
					else
					{
						this._SexId = default(string);
					}
					this.SendPropertyChanged("Sex");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Products(Product entity)
		{
			this.SendPropertyChanging();
			entity.Category = this;
		}
		
		private void detach_Products(Product entity)
		{
			this.SendPropertyChanging();
			entity.Category = null;
		}
		
		private void attach_Sizes(Size entity)
		{
			this.SendPropertyChanging();
			entity.Category = this;
		}
		
		private void detach_Sizes(Size entity)
		{
			this.SendPropertyChanging();
			entity.Category = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Collections")]
	public partial class Collection : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _CollectionId;
		
		private string _CollectionName;
		
		private System.Nullable<System.DateTime> _CollectionReleaseDate;
		
		private string _CollectionStatus;
		
		private EntitySet<Category> _Categories;
		
		private EntitySet<Product> _Products;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCollectionIdChanging(string value);
    partial void OnCollectionIdChanged();
    partial void OnCollectionNameChanging(string value);
    partial void OnCollectionNameChanged();
    partial void OnCollectionReleaseDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCollectionReleaseDateChanged();
    partial void OnCollectionStatusChanging(string value);
    partial void OnCollectionStatusChanged();
    #endregion
		
		public Collection()
		{
			this._Categories = new EntitySet<Category>(new Action<Category>(this.attach_Categories), new Action<Category>(this.detach_Categories));
			this._Products = new EntitySet<Product>(new Action<Product>(this.attach_Products), new Action<Product>(this.detach_Products));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CollectionId", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string CollectionId
		{
			get
			{
				return this._CollectionId;
			}
			set
			{
				if ((this._CollectionId != value))
				{
					this.OnCollectionIdChanging(value);
					this.SendPropertyChanging();
					this._CollectionId = value;
					this.SendPropertyChanged("CollectionId");
					this.OnCollectionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CollectionName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string CollectionName
		{
			get
			{
				return this._CollectionName;
			}
			set
			{
				if ((this._CollectionName != value))
				{
					this.OnCollectionNameChanging(value);
					this.SendPropertyChanging();
					this._CollectionName = value;
					this.SendPropertyChanged("CollectionName");
					this.OnCollectionNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CollectionReleaseDate", DbType="Date")]
		public System.Nullable<System.DateTime> CollectionReleaseDate
		{
			get
			{
				return this._CollectionReleaseDate;
			}
			set
			{
				if ((this._CollectionReleaseDate != value))
				{
					this.OnCollectionReleaseDateChanging(value);
					this.SendPropertyChanging();
					this._CollectionReleaseDate = value;
					this.SendPropertyChanged("CollectionReleaseDate");
					this.OnCollectionReleaseDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CollectionStatus", DbType="VarChar(50)")]
		public string CollectionStatus
		{
			get
			{
				return this._CollectionStatus;
			}
			set
			{
				if ((this._CollectionStatus != value))
				{
					this.OnCollectionStatusChanging(value);
					this.SendPropertyChanging();
					this._CollectionStatus = value;
					this.SendPropertyChanged("CollectionStatus");
					this.OnCollectionStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Collection_Category", Storage="_Categories", ThisKey="CollectionId", OtherKey="CollectionId")]
		public EntitySet<Category> Categories
		{
			get
			{
				return this._Categories;
			}
			set
			{
				this._Categories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Collection_Product", Storage="_Products", ThisKey="CollectionId", OtherKey="CollectionId")]
		public EntitySet<Product> Products
		{
			get
			{
				return this._Products;
			}
			set
			{
				this._Products.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Categories(Category entity)
		{
			this.SendPropertyChanging();
			entity.Collection = this;
		}
		
		private void detach_Categories(Category entity)
		{
			this.SendPropertyChanging();
			entity.Collection = null;
		}
		
		private void attach_Products(Product entity)
		{
			this.SendPropertyChanging();
			entity.Collection = this;
		}
		
		private void detach_Products(Product entity)
		{
			this.SendPropertyChanging();
			entity.Collection = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Customer")]
	public partial class Customer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _CustomerPhoneNumer;
		
		private string _CustomerPassword;
		
		private string _CustomerName;
		
		private System.Nullable<System.DateTime> _CustomerDateOfBirth;
		
		private string _CustomerSex;
		
		private string _CustomerMail;
		
		private EntitySet<Bill> _Bills;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCustomerPhoneNumerChanging(string value);
    partial void OnCustomerPhoneNumerChanged();
    partial void OnCustomerPasswordChanging(string value);
    partial void OnCustomerPasswordChanged();
    partial void OnCustomerNameChanging(string value);
    partial void OnCustomerNameChanged();
    partial void OnCustomerDateOfBirthChanging(System.Nullable<System.DateTime> value);
    partial void OnCustomerDateOfBirthChanged();
    partial void OnCustomerSexChanging(string value);
    partial void OnCustomerSexChanged();
    partial void OnCustomerMailChanging(string value);
    partial void OnCustomerMailChanged();
    #endregion
		
		public Customer()
		{
			this._Bills = new EntitySet<Bill>(new Action<Bill>(this.attach_Bills), new Action<Bill>(this.detach_Bills));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerPhoneNumer", DbType="VarChar(30) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string CustomerPhoneNumer
		{
			get
			{
				return this._CustomerPhoneNumer;
			}
			set
			{
				if ((this._CustomerPhoneNumer != value))
				{
					this.OnCustomerPhoneNumerChanging(value);
					this.SendPropertyChanging();
					this._CustomerPhoneNumer = value;
					this.SendPropertyChanged("CustomerPhoneNumer");
					this.OnCustomerPhoneNumerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerPassword", DbType="VarChar(50)")]
		public string CustomerPassword
		{
			get
			{
				return this._CustomerPassword;
			}
			set
			{
				if ((this._CustomerPassword != value))
				{
					this.OnCustomerPasswordChanging(value);
					this.SendPropertyChanging();
					this._CustomerPassword = value;
					this.SendPropertyChanged("CustomerPassword");
					this.OnCustomerPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerName", DbType="NVarChar(100)")]
		public string CustomerName
		{
			get
			{
				return this._CustomerName;
			}
			set
			{
				if ((this._CustomerName != value))
				{
					this.OnCustomerNameChanging(value);
					this.SendPropertyChanging();
					this._CustomerName = value;
					this.SendPropertyChanged("CustomerName");
					this.OnCustomerNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerDateOfBirth", DbType="Date")]
		public System.Nullable<System.DateTime> CustomerDateOfBirth
		{
			get
			{
				return this._CustomerDateOfBirth;
			}
			set
			{
				if ((this._CustomerDateOfBirth != value))
				{
					this.OnCustomerDateOfBirthChanging(value);
					this.SendPropertyChanging();
					this._CustomerDateOfBirth = value;
					this.SendPropertyChanged("CustomerDateOfBirth");
					this.OnCustomerDateOfBirthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerSex", DbType="VarChar(10)")]
		public string CustomerSex
		{
			get
			{
				return this._CustomerSex;
			}
			set
			{
				if ((this._CustomerSex != value))
				{
					this.OnCustomerSexChanging(value);
					this.SendPropertyChanging();
					this._CustomerSex = value;
					this.SendPropertyChanged("CustomerSex");
					this.OnCustomerSexChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerMail", DbType="VarChar(50)")]
		public string CustomerMail
		{
			get
			{
				return this._CustomerMail;
			}
			set
			{
				if ((this._CustomerMail != value))
				{
					this.OnCustomerMailChanging(value);
					this.SendPropertyChanging();
					this._CustomerMail = value;
					this.SendPropertyChanged("CustomerMail");
					this.OnCustomerMailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_Bill", Storage="_Bills", ThisKey="CustomerPhoneNumer", OtherKey="CustomerPhoneNumber")]
		public EntitySet<Bill> Bills
		{
			get
			{
				return this._Bills;
			}
			set
			{
				this._Bills.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Bills(Bill entity)
		{
			this.SendPropertyChanging();
			entity.Customer = this;
		}
		
		private void detach_Bills(Bill entity)
		{
			this.SendPropertyChanging();
			entity.Customer = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CustomerAddress")]
	public partial class CustomerAddress : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _CustomerPhoneNumer;
		
		private string _AddressNumber;
		
		private string _AddressStreet;
		
		private string _AddressWard;
		
		private string _AddressDistrict;
		
		private string _AddressProvince;
		
		private EntitySet<Bill> _Bills;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCustomerPhoneNumerChanging(string value);
    partial void OnCustomerPhoneNumerChanged();
    partial void OnAddressNumberChanging(string value);
    partial void OnAddressNumberChanged();
    partial void OnAddressStreetChanging(string value);
    partial void OnAddressStreetChanged();
    partial void OnAddressWardChanging(string value);
    partial void OnAddressWardChanged();
    partial void OnAddressDistrictChanging(string value);
    partial void OnAddressDistrictChanged();
    partial void OnAddressProvinceChanging(string value);
    partial void OnAddressProvinceChanged();
    #endregion
		
		public CustomerAddress()
		{
			this._Bills = new EntitySet<Bill>(new Action<Bill>(this.attach_Bills), new Action<Bill>(this.detach_Bills));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerPhoneNumer", DbType="VarChar(30) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string CustomerPhoneNumer
		{
			get
			{
				return this._CustomerPhoneNumer;
			}
			set
			{
				if ((this._CustomerPhoneNumer != value))
				{
					this.OnCustomerPhoneNumerChanging(value);
					this.SendPropertyChanging();
					this._CustomerPhoneNumer = value;
					this.SendPropertyChanged("CustomerPhoneNumer");
					this.OnCustomerPhoneNumerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddressNumber", DbType="VarChar(30)")]
		public string AddressNumber
		{
			get
			{
				return this._AddressNumber;
			}
			set
			{
				if ((this._AddressNumber != value))
				{
					this.OnAddressNumberChanging(value);
					this.SendPropertyChanging();
					this._AddressNumber = value;
					this.SendPropertyChanged("AddressNumber");
					this.OnAddressNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddressStreet", DbType="NVarChar(30)")]
		public string AddressStreet
		{
			get
			{
				return this._AddressStreet;
			}
			set
			{
				if ((this._AddressStreet != value))
				{
					this.OnAddressStreetChanging(value);
					this.SendPropertyChanging();
					this._AddressStreet = value;
					this.SendPropertyChanged("AddressStreet");
					this.OnAddressStreetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddressWard", DbType="NVarChar(30)")]
		public string AddressWard
		{
			get
			{
				return this._AddressWard;
			}
			set
			{
				if ((this._AddressWard != value))
				{
					this.OnAddressWardChanging(value);
					this.SendPropertyChanging();
					this._AddressWard = value;
					this.SendPropertyChanged("AddressWard");
					this.OnAddressWardChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddressDistrict", DbType="NVarChar(30)")]
		public string AddressDistrict
		{
			get
			{
				return this._AddressDistrict;
			}
			set
			{
				if ((this._AddressDistrict != value))
				{
					this.OnAddressDistrictChanging(value);
					this.SendPropertyChanging();
					this._AddressDistrict = value;
					this.SendPropertyChanged("AddressDistrict");
					this.OnAddressDistrictChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddressProvince", DbType="NVarChar(30)")]
		public string AddressProvince
		{
			get
			{
				return this._AddressProvince;
			}
			set
			{
				if ((this._AddressProvince != value))
				{
					this.OnAddressProvinceChanging(value);
					this.SendPropertyChanging();
					this._AddressProvince = value;
					this.SendPropertyChanged("AddressProvince");
					this.OnAddressProvinceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CustomerAddress_Bill", Storage="_Bills", ThisKey="CustomerPhoneNumer", OtherKey="CustomerPhoneNumber")]
		public EntitySet<Bill> Bills
		{
			get
			{
				return this._Bills;
			}
			set
			{
				this._Bills.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Bills(Bill entity)
		{
			this.SendPropertyChanging();
			entity.CustomerAddress = this;
		}
		
		private void detach_Bills(Bill entity)
		{
			this.SendPropertyChanging();
			entity.CustomerAddress = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Discount")]
	public partial class Discount : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _DiscountId;
		
		private string _DiscountMethods;
		
		private System.Nullable<int> _DiscountValue;
		
		private string _DiscountStatus;
		
		private EntitySet<Bill> _Bills;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDiscountIdChanging(string value);
    partial void OnDiscountIdChanged();
    partial void OnDiscountMethodsChanging(string value);
    partial void OnDiscountMethodsChanged();
    partial void OnDiscountValueChanging(System.Nullable<int> value);
    partial void OnDiscountValueChanged();
    partial void OnDiscountStatusChanging(string value);
    partial void OnDiscountStatusChanged();
    #endregion
		
		public Discount()
		{
			this._Bills = new EntitySet<Bill>(new Action<Bill>(this.attach_Bills), new Action<Bill>(this.detach_Bills));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiscountId", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string DiscountId
		{
			get
			{
				return this._DiscountId;
			}
			set
			{
				if ((this._DiscountId != value))
				{
					this.OnDiscountIdChanging(value);
					this.SendPropertyChanging();
					this._DiscountId = value;
					this.SendPropertyChanged("DiscountId");
					this.OnDiscountIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiscountMethods", DbType="VarChar(10)")]
		public string DiscountMethods
		{
			get
			{
				return this._DiscountMethods;
			}
			set
			{
				if ((this._DiscountMethods != value))
				{
					this.OnDiscountMethodsChanging(value);
					this.SendPropertyChanging();
					this._DiscountMethods = value;
					this.SendPropertyChanged("DiscountMethods");
					this.OnDiscountMethodsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiscountValue", DbType="Int")]
		public System.Nullable<int> DiscountValue
		{
			get
			{
				return this._DiscountValue;
			}
			set
			{
				if ((this._DiscountValue != value))
				{
					this.OnDiscountValueChanging(value);
					this.SendPropertyChanging();
					this._DiscountValue = value;
					this.SendPropertyChanged("DiscountValue");
					this.OnDiscountValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiscountStatus", DbType="VarChar(10)")]
		public string DiscountStatus
		{
			get
			{
				return this._DiscountStatus;
			}
			set
			{
				if ((this._DiscountStatus != value))
				{
					this.OnDiscountStatusChanging(value);
					this.SendPropertyChanging();
					this._DiscountStatus = value;
					this.SendPropertyChanged("DiscountStatus");
					this.OnDiscountStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Discount_Bill", Storage="_Bills", ThisKey="DiscountId", OtherKey="DiscountId")]
		public EntitySet<Bill> Bills
		{
			get
			{
				return this._Bills;
			}
			set
			{
				this._Bills.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Bills(Bill entity)
		{
			this.SendPropertyChanging();
			entity.Discount = this;
		}
		
		private void detach_Bills(Bill entity)
		{
			this.SendPropertyChanging();
			entity.Discount = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Product")]
	public partial class Product : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ProductId;
		
		private string _ProductName;
		
		private double _ProductPrice;
		
		private string _ProductSize;
		
		private string _ProductImage;
		
		private System.Nullable<System.DateTime> _ProductReleaseDate;
		
		private string _ProductStatus;
		
		private string _CategoryId;
		
		private string _SexId;
		
		private string _CollectionId;
		
		private EntitySet<BillDeTail> _BillDeTails;
		
		private EntityRef<Category> _Category;
		
		private EntityRef<Collection> _Collection;
		
		private EntityRef<Sex> _Sex;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProductIdChanging(string value);
    partial void OnProductIdChanged();
    partial void OnProductNameChanging(string value);
    partial void OnProductNameChanged();
    partial void OnProductPriceChanging(double value);
    partial void OnProductPriceChanged();
    partial void OnProductSizeChanging(string value);
    partial void OnProductSizeChanged();
    partial void OnProductImageChanging(string value);
    partial void OnProductImageChanged();
    partial void OnProductReleaseDateChanging(System.Nullable<System.DateTime> value);
    partial void OnProductReleaseDateChanged();
    partial void OnProductStatusChanging(string value);
    partial void OnProductStatusChanged();
    partial void OnCategoryIdChanging(string value);
    partial void OnCategoryIdChanged();
    partial void OnSexIdChanging(string value);
    partial void OnSexIdChanged();
    partial void OnCollectionIdChanging(string value);
    partial void OnCollectionIdChanged();
    #endregion
		
		public Product()
		{
			this._BillDeTails = new EntitySet<BillDeTail>(new Action<BillDeTail>(this.attach_BillDeTails), new Action<BillDeTail>(this.detach_BillDeTails));
			this._Category = default(EntityRef<Category>);
			this._Collection = default(EntityRef<Collection>);
			this._Sex = default(EntityRef<Sex>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductId", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ProductId
		{
			get
			{
				return this._ProductId;
			}
			set
			{
				if ((this._ProductId != value))
				{
					this.OnProductIdChanging(value);
					this.SendPropertyChanging();
					this._ProductId = value;
					this.SendPropertyChanged("ProductId");
					this.OnProductIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ProductName
		{
			get
			{
				return this._ProductName;
			}
			set
			{
				if ((this._ProductName != value))
				{
					this.OnProductNameChanging(value);
					this.SendPropertyChanging();
					this._ProductName = value;
					this.SendPropertyChanged("ProductName");
					this.OnProductNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductPrice", DbType="Float NOT NULL")]
		public double ProductPrice
		{
			get
			{
				return this._ProductPrice;
			}
			set
			{
				if ((this._ProductPrice != value))
				{
					this.OnProductPriceChanging(value);
					this.SendPropertyChanging();
					this._ProductPrice = value;
					this.SendPropertyChanged("ProductPrice");
					this.OnProductPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductSize", DbType="VarChar(10)")]
		public string ProductSize
		{
			get
			{
				return this._ProductSize;
			}
			set
			{
				if ((this._ProductSize != value))
				{
					this.OnProductSizeChanging(value);
					this.SendPropertyChanging();
					this._ProductSize = value;
					this.SendPropertyChanged("ProductSize");
					this.OnProductSizeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductImage", DbType="VarChar(50)")]
		public string ProductImage
		{
			get
			{
				return this._ProductImage;
			}
			set
			{
				if ((this._ProductImage != value))
				{
					this.OnProductImageChanging(value);
					this.SendPropertyChanging();
					this._ProductImage = value;
					this.SendPropertyChanged("ProductImage");
					this.OnProductImageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductReleaseDate", DbType="Date")]
		public System.Nullable<System.DateTime> ProductReleaseDate
		{
			get
			{
				return this._ProductReleaseDate;
			}
			set
			{
				if ((this._ProductReleaseDate != value))
				{
					this.OnProductReleaseDateChanging(value);
					this.SendPropertyChanging();
					this._ProductReleaseDate = value;
					this.SendPropertyChanged("ProductReleaseDate");
					this.OnProductReleaseDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductStatus", DbType="VarChar(50)")]
		public string ProductStatus
		{
			get
			{
				return this._ProductStatus;
			}
			set
			{
				if ((this._ProductStatus != value))
				{
					this.OnProductStatusChanging(value);
					this.SendPropertyChanging();
					this._ProductStatus = value;
					this.SendPropertyChanged("ProductStatus");
					this.OnProductStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryId", DbType="VarChar(10)")]
		public string CategoryId
		{
			get
			{
				return this._CategoryId;
			}
			set
			{
				if ((this._CategoryId != value))
				{
					if (this._Category.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCategoryIdChanging(value);
					this.SendPropertyChanging();
					this._CategoryId = value;
					this.SendPropertyChanged("CategoryId");
					this.OnCategoryIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SexId", DbType="VarChar(10)")]
		public string SexId
		{
			get
			{
				return this._SexId;
			}
			set
			{
				if ((this._SexId != value))
				{
					if (this._Sex.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSexIdChanging(value);
					this.SendPropertyChanging();
					this._SexId = value;
					this.SendPropertyChanged("SexId");
					this.OnSexIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CollectionId", DbType="VarChar(10)")]
		public string CollectionId
		{
			get
			{
				return this._CollectionId;
			}
			set
			{
				if ((this._CollectionId != value))
				{
					if (this._Collection.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCollectionIdChanging(value);
					this.SendPropertyChanging();
					this._CollectionId = value;
					this.SendPropertyChanged("CollectionId");
					this.OnCollectionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_BillDeTail", Storage="_BillDeTails", ThisKey="ProductId", OtherKey="ProductId")]
		public EntitySet<BillDeTail> BillDeTails
		{
			get
			{
				return this._BillDeTails;
			}
			set
			{
				this._BillDeTails.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Category_Product", Storage="_Category", ThisKey="CategoryId", OtherKey="CategoryId", IsForeignKey=true)]
		public Category Category
		{
			get
			{
				return this._Category.Entity;
			}
			set
			{
				Category previousValue = this._Category.Entity;
				if (((previousValue != value) 
							|| (this._Category.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Category.Entity = null;
						previousValue.Products.Remove(this);
					}
					this._Category.Entity = value;
					if ((value != null))
					{
						value.Products.Add(this);
						this._CategoryId = value.CategoryId;
					}
					else
					{
						this._CategoryId = default(string);
					}
					this.SendPropertyChanged("Category");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Collection_Product", Storage="_Collection", ThisKey="CollectionId", OtherKey="CollectionId", IsForeignKey=true)]
		public Collection Collection
		{
			get
			{
				return this._Collection.Entity;
			}
			set
			{
				Collection previousValue = this._Collection.Entity;
				if (((previousValue != value) 
							|| (this._Collection.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Collection.Entity = null;
						previousValue.Products.Remove(this);
					}
					this._Collection.Entity = value;
					if ((value != null))
					{
						value.Products.Add(this);
						this._CollectionId = value.CollectionId;
					}
					else
					{
						this._CollectionId = default(string);
					}
					this.SendPropertyChanged("Collection");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Sex_Product", Storage="_Sex", ThisKey="SexId", OtherKey="SexId", IsForeignKey=true)]
		public Sex Sex
		{
			get
			{
				return this._Sex.Entity;
			}
			set
			{
				Sex previousValue = this._Sex.Entity;
				if (((previousValue != value) 
							|| (this._Sex.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Sex.Entity = null;
						previousValue.Products.Remove(this);
					}
					this._Sex.Entity = value;
					if ((value != null))
					{
						value.Products.Add(this);
						this._SexId = value.SexId;
					}
					else
					{
						this._SexId = default(string);
					}
					this.SendPropertyChanged("Sex");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BillDeTails(BillDeTail entity)
		{
			this.SendPropertyChanging();
			entity.Product = this;
		}
		
		private void detach_BillDeTails(BillDeTail entity)
		{
			this.SendPropertyChanging();
			entity.Product = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Sex")]
	public partial class Sex : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _SexId;
		
		private string _Sex1;
		
		private EntitySet<Category> _Categories;
		
		private EntitySet<Product> _Products;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSexIdChanging(string value);
    partial void OnSexIdChanged();
    partial void OnSex1Changing(string value);
    partial void OnSex1Changed();
    #endregion
		
		public Sex()
		{
			this._Categories = new EntitySet<Category>(new Action<Category>(this.attach_Categories), new Action<Category>(this.detach_Categories));
			this._Products = new EntitySet<Product>(new Action<Product>(this.attach_Products), new Action<Product>(this.detach_Products));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SexId", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string SexId
		{
			get
			{
				return this._SexId;
			}
			set
			{
				if ((this._SexId != value))
				{
					this.OnSexIdChanging(value);
					this.SendPropertyChanging();
					this._SexId = value;
					this.SendPropertyChanged("SexId");
					this.OnSexIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Sex", Storage="_Sex1", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string Sex1
		{
			get
			{
				return this._Sex1;
			}
			set
			{
				if ((this._Sex1 != value))
				{
					this.OnSex1Changing(value);
					this.SendPropertyChanging();
					this._Sex1 = value;
					this.SendPropertyChanged("Sex1");
					this.OnSex1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Sex_Category", Storage="_Categories", ThisKey="SexId", OtherKey="SexId")]
		public EntitySet<Category> Categories
		{
			get
			{
				return this._Categories;
			}
			set
			{
				this._Categories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Sex_Product", Storage="_Products", ThisKey="SexId", OtherKey="SexId")]
		public EntitySet<Product> Products
		{
			get
			{
				return this._Products;
			}
			set
			{
				this._Products.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Categories(Category entity)
		{
			this.SendPropertyChanging();
			entity.Sex = this;
		}
		
		private void detach_Categories(Category entity)
		{
			this.SendPropertyChanging();
			entity.Sex = null;
		}
		
		private void attach_Products(Product entity)
		{
			this.SendPropertyChanging();
			entity.Sex = this;
		}
		
		private void detach_Products(Product entity)
		{
			this.SendPropertyChanging();
			entity.Sex = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Size")]
	public partial class Size : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _SizeValue;
		
		private string _SizeId;
		
		private EntityRef<Category> _Category;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnSizeValueChanging(string value);
    partial void OnSizeValueChanged();
    partial void OnSizeIdChanging(string value);
    partial void OnSizeIdChanged();
    #endregion
		
		public Size()
		{
			this._Category = default(EntityRef<Category>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SizeValue", DbType="VarChar(10)")]
		public string SizeValue
		{
			get
			{
				return this._SizeValue;
			}
			set
			{
				if ((this._SizeValue != value))
				{
					this.OnSizeValueChanging(value);
					this.SendPropertyChanging();
					this._SizeValue = value;
					this.SendPropertyChanged("SizeValue");
					this.OnSizeValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SizeId", DbType="VarChar(10)")]
		public string SizeId
		{
			get
			{
				return this._SizeId;
			}
			set
			{
				if ((this._SizeId != value))
				{
					if (this._Category.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSizeIdChanging(value);
					this.SendPropertyChanging();
					this._SizeId = value;
					this.SendPropertyChanged("SizeId");
					this.OnSizeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Category_Size", Storage="_Category", ThisKey="SizeId", OtherKey="CategoryId", IsForeignKey=true)]
		public Category Category
		{
			get
			{
				return this._Category.Entity;
			}
			set
			{
				Category previousValue = this._Category.Entity;
				if (((previousValue != value) 
							|| (this._Category.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Category.Entity = null;
						previousValue.Sizes.Remove(this);
					}
					this._Category.Entity = value;
					if ((value != null))
					{
						value.Sizes.Add(this);
						this._SizeId = value.CategoryId;
					}
					else
					{
						this._SizeId = default(string);
					}
					this.SendPropertyChanged("Category");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BillDeTail")]
	public partial class BillDeTail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _BillId;
		
		private int _NumericalOrder;
		
		private System.Nullable<int> _Amount;
		
		private System.Nullable<double> _Price;
		
		private System.Nullable<double> _PriceTotal;
		
		private string _ProductId;
		
		private string _Size;
		
		private EntityRef<Bill> _Bill;
		
		private EntityRef<Product> _Product;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBillIdChanging(int value);
    partial void OnBillIdChanged();
    partial void OnNumericalOrderChanging(int value);
    partial void OnNumericalOrderChanged();
    partial void OnAmountChanging(System.Nullable<int> value);
    partial void OnAmountChanged();
    partial void OnPriceChanging(System.Nullable<double> value);
    partial void OnPriceChanged();
    partial void OnPriceTotalChanging(System.Nullable<double> value);
    partial void OnPriceTotalChanged();
    partial void OnProductIdChanging(string value);
    partial void OnProductIdChanged();
    partial void OnSizeChanging(string value);
    partial void OnSizeChanged();
    #endregion
		
		public BillDeTail()
		{
			this._Bill = default(EntityRef<Bill>);
			this._Product = default(EntityRef<Product>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BillId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int BillId
		{
			get
			{
				return this._BillId;
			}
			set
			{
				if ((this._BillId != value))
				{
					if (this._Bill.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBillIdChanging(value);
					this.SendPropertyChanging();
					this._BillId = value;
					this.SendPropertyChanged("BillId");
					this.OnBillIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumericalOrder", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int NumericalOrder
		{
			get
			{
				return this._NumericalOrder;
			}
			set
			{
				if ((this._NumericalOrder != value))
				{
					this.OnNumericalOrderChanging(value);
					this.SendPropertyChanging();
					this._NumericalOrder = value;
					this.SendPropertyChanged("NumericalOrder");
					this.OnNumericalOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Int")]
		public System.Nullable<int> Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Float")]
		public System.Nullable<double> Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PriceTotal", DbType="Float")]
		public System.Nullable<double> PriceTotal
		{
			get
			{
				return this._PriceTotal;
			}
			set
			{
				if ((this._PriceTotal != value))
				{
					this.OnPriceTotalChanging(value);
					this.SendPropertyChanging();
					this._PriceTotal = value;
					this.SendPropertyChanged("PriceTotal");
					this.OnPriceTotalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductId", DbType="VarChar(10)")]
		public string ProductId
		{
			get
			{
				return this._ProductId;
			}
			set
			{
				if ((this._ProductId != value))
				{
					if (this._Product.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProductIdChanging(value);
					this.SendPropertyChanging();
					this._ProductId = value;
					this.SendPropertyChanged("ProductId");
					this.OnProductIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Size", DbType="VarChar(10)")]
		public string Size
		{
			get
			{
				return this._Size;
			}
			set
			{
				if ((this._Size != value))
				{
					this.OnSizeChanging(value);
					this.SendPropertyChanging();
					this._Size = value;
					this.SendPropertyChanged("Size");
					this.OnSizeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Bill_BillDeTail", Storage="_Bill", ThisKey="BillId", OtherKey="BillId", IsForeignKey=true)]
		public Bill Bill
		{
			get
			{
				return this._Bill.Entity;
			}
			set
			{
				Bill previousValue = this._Bill.Entity;
				if (((previousValue != value) 
							|| (this._Bill.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Bill.Entity = null;
						previousValue.BillDeTails.Remove(this);
					}
					this._Bill.Entity = value;
					if ((value != null))
					{
						value.BillDeTails.Add(this);
						this._BillId = value.BillId;
					}
					else
					{
						this._BillId = default(int);
					}
					this.SendPropertyChanged("Bill");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_BillDeTail", Storage="_Product", ThisKey="ProductId", OtherKey="ProductId", IsForeignKey=true)]
		public Product Product
		{
			get
			{
				return this._Product.Entity;
			}
			set
			{
				Product previousValue = this._Product.Entity;
				if (((previousValue != value) 
							|| (this._Product.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Product.Entity = null;
						previousValue.BillDeTails.Remove(this);
					}
					this._Product.Entity = value;
					if ((value != null))
					{
						value.BillDeTails.Add(this);
						this._ProductId = value.ProductId;
					}
					else
					{
						this._ProductId = default(string);
					}
					this.SendPropertyChanged("Product");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
